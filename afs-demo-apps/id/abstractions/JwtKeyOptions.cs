namespace afs.jwt.abstractions
{
    public class JwtKeyOptions
    {
        /// <summary>Directory with JWT encryption key file</summary>
        /// <remarks>
        /// Key pairs are generated by the build server and distributed to edge nodes.
        /// If directory contains multiple keys, latest shall be used by default. If token claims contain ID of the used pair, matching public key shall be used.
        /// </remarks>
        public string JwtKeysDirectory { get; set; } = @"App_Data/secure";

        /// <summary>
        /// Format of the public key file name.
        /// Defaults to "jwt_(?&lt;sig_id&gt;.*)_public\.pem"
        /// </summary>
        /// <remarks>
        /// 'sig_id' represents the unique ID of the key pair, used in token payload claims.
        /// This claim is used by the validator to detect used key pair.</remarks>
        /// <example>
        /// jwt_3741cc07-d846-41e0-8024-9bd61f4d0002_public.pem
        /// </example>
        public string JwtPublicKeyFileNameFormat { get; set;  } = @"jwt_(?<sig_id>.*)_public\.pem";

        /// <summary>
        /// Format of the public key file name.
        /// Defaults to "jwt_(?&lt;sig_id&gt;.*)_private\.pem"
        /// </summary>
        /// <remarks>
        /// 'sig_id' represents the unique ID of the key pair, used in token payload claims.
        /// Token issuer ads this claim to token payload.
        /// This claim is used by the validator to detect used key pair.</remarks>
        /// <example>
        /// jwt_3741cc07-d846-41e0-8024-9bd61f4d0002_private.pem
        /// </example>
        public string JwtPrivateKeyFileNameFormat { get; set;  } = @"jwt_(?<sig_id>.*)_private\.pem";

        public bool JwtWatchKeyChanges { get; set; }
    }
}